name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        kind: ['build', 'test']
        go: ['^1.14.2']
        os: [ubuntu-latest]
    name: Go ${{ matrix.go }} ${{ matrix.kind }} in ${{ matrix.os }}

    services:
      postgres:
        image: postgres:12.3-alpine
        env:
          POSTGRES_USER: gotest
          POSTGRES_PASSWORD: gotest
          POSTGRES_DB: gotest
        ports:
          - 54321:5432
        # needed because the postgres container does not provide a health check
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        # Docker Hub image
        image: redis:6.0.2-alpine
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # env:
        # "redis-cli ping"
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Environment
        run: |
          go version
          go env

      - name: Test
        if: matrix.kind == 'test'
        env:
          DB_DRIVER: postgres
          DB_NAME: gotest
          DB_USERNAME: gotest
          DB_PASSWORD: gotest
          DB_PORT: 54321
          DB_SYNC: on
        run: make test

      - name: Build
        if: matrix.kind == 'build'
        run: make build

      - name: Coverage
        if: matrix.kind == 'test' && github.repository == 'axetroy/go-server'
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        run: |
          GO111MODULE=off go get golang.org/x/tools/cmd/cover
          GO111MODULE=off go get github.com/mattn/goveralls
          $(go env GOPATH)/bin/goveralls -coverprofile=coverage.out -service="GitHub Action" -jobid="${{ github.run_id }}" -jobnumber="${{ github.run_number }}" -reponame="${{ github.repository }}"

      - uses: softprops/action-gh-release@v1
        name: Release to Github
        if: matrix.kind == 'build' && startsWith(github.ref, 'refs/tags/') && github.repository == 'axetroy/go-server'
        env:
          # require Github Personal Access Token
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          files: |
            ./bin/user_server_darwin_amd64.tar.gz
            ./bin/user_server_linux_amd64.tar.gz
            ./bin/user_server_windows_amd64.tar.gz
            ./bin/admin_server_darwin_amd64.tar.gz
            ./bin/admin_server_linux_amd64.tar.gz
            ./bin/admin_server_windows_amd64.tar.gz
            ./bin/resource_server_darwin_amd64.tar.gz
            ./bin/resource_server_linux_amd64.tar.gz
            ./bin/resource_server_windows_amd64.tar.gz
            ./bin/message_queue_server_darwin_amd64.tar.gz
            ./bin/message_queue_server_linux_amd64.tar.gz
            ./bin/message_queue_server_windows_amd64.tar.gz
          draft: false
